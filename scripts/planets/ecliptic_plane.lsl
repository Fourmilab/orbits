
    
        /*  NOTE: This program was automatically generated by the Nuweb
            literate programming tool.  It is not intended to be modified
            directly.  If you wish to modify the code or use it in another
            project, you should start with the master, which is kept in the
            file orbits.w in the public GitHub repository:
                https://github.com/Fourmilab/orbits.git
            and is documented in the file orbits.pdf in the root directory
            of that repository.

            Build 0  1900-01-01 00:00  */
    

    key owner;                          // UUID of owner
    key whoDat;                         // User with whom we're communicating
    key deployer;                       // ID of deployer who created us

    integer massChannel =  -982449822 ;  // Channel for communicating with planets
    string ypres = "B?+:$$";            // It's pronounced "Wipers"
    string planecrash = "P?+:$$";       // Selectively delete ecliptic plane

    default {

        state_entry() {
            whoDat = owner = llGetOwner();
        }

        on_rez(integer start_param) {
            //  If start_param is zero, this is a simple manual rez
            if (start_param != 0) {
                deployer = llList2Key(llGetObjectDetails(llGetKey(),
                                         [ OBJECT_REZZER_KEY ]), 0);

                /*  Scale plane to correct size.  The size in metres is
                    passed in the start_param in units of centimetres.  */
                float xyscale = start_param / 100.0;
                llSetLinkPrimitiveParamsFast(LINK_THIS, [
                    PRIM_SIZE, < xyscale, xyscale, 0.01 >
                ]);

                //  Listen for messages from deployer
                llListen(massChannel, "", NULL_KEY, "");
            }
        }

        listen(integer channel, string name, key id, string message) {

            if (channel == massChannel) {
                list msg = llJson2List(message);
                string ccmd = llList2String(msg, 0);

                if (id == deployer) {

                    if ((ccmd == ypres) || (ccmd == planecrash)) {
                        llDie();

                    
                        } else if (ccmd == "VERSION") {
                            if ("0" != llList2String(msg, 1)) {
                                llOwnerSay(llGetScriptName() +
                                           " build mismatch: Deployer " + llList2String(msg, 1) +
                                           " Local 0");
                            }
                    
                    }
                }
            }
        }
    }
