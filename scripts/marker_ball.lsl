
    
        /*  NOTE: This program was automatically generated by the Nuweb
            literate programming tool.  It is not intended to be modified
            directly.  If you wish to modify the code or use it in another
            project, you should start with the master, which is kept in the
            file orbits.w in the public GitHub repository:
                https://github.com/Fourmilab/orbits.git
            and is documented in the file orbits.pdf in the root directory
            of that repository.

            Build 0  1900-01-01 00:00  */
    

    key deployer;                       // ID of deployer who hatched us
    integer massChannel =  -982449822 ;  // Channel for communications
    string ypres = "B?+:$$";            // It's pronounced "Wipers"

    default {

        on_rez(integer sparam) {
            if (sparam != 0) {
//              llSetLinkPrimitiveParamsFast(LINK_THIS, [ PRIM_TEMP_ON_REZ, TRUE ]);

                deployer = llList2Key(llGetObjectDetails(llGetKey(),
                                         [ OBJECT_REZZER_KEY ]), 0);

                //  Listen for messages from deployer
                llListen(massChannel, "", NULL_KEY, "");

                /*  Decode start parameter:
                        Bits        Content
                        31-24       Size (1 to 256 cm)
                        23-16       Colour R
                        15-8        Colour G
                         7-0        Colour B    */

                vector colour = < (sparam >> 16) & 0xFF,
                                  (sparam >> 8) & 0xFF,
                                  (sparam & 0xFF) > /Â 255.0;

                float diameter = (((sparam >> 24) & 0xFF) / 255.0) + 0.01;

                llSetLinkPrimitiveParamsFast(LINK_THIS, [
                    PRIM_SIZE, < diameter, diameter, diameter >,
                    PRIM_COLOR, ALL_SIDES, colour, 1
                ]);
            }
        }

        listen(integer channel, string name, key id, string message) {
//llOwnerSay(llGetScriptName() + " channel " + (string) channel + " id " + (string) id +  " message " + message);
            if (channel == massChannel) {
                list msg = llJson2List(message);
                string ccmd = llList2String(msg, 0);

                if (id == deployer) {

                    //  Message from Deployer

                    //  ypres  --  Destroy marker

                    if (ccmd == ypres) {
                        llDie();

                    
                        } else if (ccmd == "VERSION") {
                            if ("0" != llList2String(msg, 1)) {
                                llOwnerSay(llGetScriptName() +
                                           " build mismatch: Deployer " + llList2String(msg, 1) +
                                           " Local 0");
                            }
                    
                    }
                }
            }
        }
    }
