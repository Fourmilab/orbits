

    #   NOTE: This program was automatically generated by the Nuweb
    #   literate programming tool.  It is not intended to be modified
    #   directly.  If you wish to modify the code or use it in another
    #   project, you should start with the master, which is kept in the
    #   file orbits.w in the public GitHub repository:
    #       https://github.com/Fourmilab/orbits.git
    #   and is documented in the file orbits.pdf in the root directory
    #   of that repository.


PROJECT = orbits

#       Path names for build utilities

NUWEB = nuweb
LATEX = xelatex
PDFVIEW = evince
LSLINT = lslint
GNUFIND = find

duh:
	@echo "What'll it be, mate?  build view peek lint stats clean"

build:
	perl tools/build/update_build.pl
	$(NUWEB) -t $(PROJECT).w
	@if [ \( ! -f Makefile \) -o \( Makefile.mkf -nt Makefile \) ] ; then \
		echo Makefile.mkf is newer than Makefile ; \
		sed "s/ \*$$//" Makefile.mkf | unexpand >Makefile ; \
	fi

view:
	$(NUWEB) -o -r $(PROJECT).w
	$(LATEX) $(PROJECT).tex
	# We have to re-run Nuweb to incorporate the updated TOC
	$(NUWEB) -o -r $(PROJECT).w
	$(LATEX) $(PROJECT).tex
	$(PDFVIEW) $(PROJECT).pdf

peek:
	$(PDFVIEW) $(PROJECT).pdf

lint:
	@# Uses GNU find extension to quit on first lslint error
	$(GNUFIND) scripts -type f -name \*.lsl -print \
		\( -exec $(LSLINT) {} \; -o -quit \)

stats:
	@echo Build `grep "Build number" build.w | sed 's/[^0-9]//g'` \
		`grep "Build date and time " build.w | \
		sed 's/[^:0-9 \-]//g' | sed 's/^ *//'`
	@echo Web: `wc -l *.w`
	@echo Scripts: `find scripts -type f -name \*.lsl -print | wc -l`
	@echo Lines: `find scripts -type f -name \*.lsl -exec cat {} \; | wc -l`
	@if [ -f $(PROJECT).log ] ; then \
		echo -n "Pages: " ; \
		tail -5 $(PROJECT).log | grep pages | sed 's/[^0-9]//g' ; \
	fi

clean:
	rm -f nw[0-9]*[0-9] rm *.aux *.log *.out *.pdf *.tex *.toc

squeaky:
	#make clean
	#rm -f Makefile.mkf
	#find scripts -type f -name \*.lsl -exec rm -f {} \;
	#  Need to clean tools directory after all integrated here
